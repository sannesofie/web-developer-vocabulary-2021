webdeveloper vocabulary 2021



1. Agile
A is for agile, a major buzzword across the entire tech industry right now. Agile web development essentially refers to a particular way of working, and you’ll often hear this term in the startup world. In an agile team, web developers will work according to weekly or biweekly sprints. A sprint usually consists of five phases: design, develop, test, deploy and review. You can learn more about agile web development in this article.

2. Algorithm
An algorithm is basically a set of steps for carrying out certain tasks. In computer programming, algorithms are a key part of problem-solving. When creating an algorithm, developers will document all the necessary steps it took to arrive at a solution to a problem, and what each step involved.

3. API
API stands for Application Programming Interface. An API enables two different programs to communicate with each other by making some parts of the website code available to developers. Developers can use this code, i.e. the API, to build tools and widgets that can be connected to that particular website. A classic example is the Facebook API, which enables apps like Facebook Messenger and Words with Friends.

4. Application
You’re no doubt familiar with apps, and probably use several on a daily basis. An application is basically a type of software that enables the user to perform different tasks—whether it’s setting an alarm on your smartphone or typing a document in Microsoft Word. As a developer, you need to be familiar with the difference between desktop apps, mobile apps and web apps. See also: Web app.

5. Adaptive design
The way in which a website is built determines how it appears on different devices. Adaptive design creates a website in several different layouts, each suited for different screen sizes. Depending on what device is being used to access the website, the website will adapt and deliver the appropriate layout. See also: responsive design and mobile-first.

6. Bootstrap
Bootstrap is a free, open-source frontend framework for designing websites and web apps. It was developed by Mark Otto and Jacob Thornton at Twitter in order to encourage consistency across internal tools. Bootstrap includes HTML and CSS-based design templates for typography, forms, buttons, tables, navigation, modals and more, plus JavaScript plugins. Check out this beginner’s guide to Bootstrap to get you started. See also: frameworks and frontend.

7. Backend
Backend development essentially refers to everything that goes on behind the scenes. What happens at the backend—or server-side—powers what happens at the frontend, i.e. what the user sees and interacts with. Backend development can be broken down into four main components of a software stack: the server, the database, the operating system, and the software. You can learn more about the difference between frontend and backend elsewhere on the blog .

8. Browser
A web browser is the software used to access the internet and display web pages. When you type a web address or URL into the browser, you are effectively sending out a series of requests. The browser will gather all the different elements that make up that particular webpage, such as images, ads and content, from wherever they are stored (i.e. different directories or servers) in order to display the page that you see. The most common browsers include Microsoft Internet Explorer, Google Chrome, Mozilla Firefox, Safari for Apple, and Opera.

9. Bug
If you want to work as a web developer, this is one word you’ll definitely need in your vocabulary! Put simply, a bug is an error that prevents a website or app from running as it should. In the world of web development, you’ll often deal with bug reports and be tasked with fixing said bugs.

10. Cache
A cache is a temporary storage space for data. When you visit a website, the files that you request are automatically stored in the cache. If you return to that same website in the near future, your browser will retrieve the necessary files from your cache rather than from the original server—so the webpage will load quicker.

11. Code
Of course, you can’t call yourself a web developer until you know what code is! Code is essentially what web developers write using programming languages (scroll down to languages in this glossary!). To see exactly what code looks like, right-click on your internet browser window and click “view page source”. You’ll then be able to see the code that’s behind this particular website.

12. CSS
CSS stands for Cascading Style Sheets. It is a markup language responsible for the visual elements of a website. HTML (another markup language) is used to determine the structure and content of the webpage. Web developers will then use CSS to style this content; in other words, CSS tells the browser how the HTML elements should be displayed. CSS is used to apply colors and to determine font, text size and alignment, to name just a few. Interested in learning more about it? We’ve got a detailed guide to CSS.

13. Data structures
A crucial aspect of development and programming, data structures are a way of organizing and storing data for maximum efficiency—much like books in a library. Data structures make it easy to find, access, sort, insert and delete data. There are many different types of data structures, including linked lists, stacks, queues and sets.

14. Debugging
Remember those bugs we talked about? Well, debugging is the process of identifying and dealing with them. Debugging is a multistep process: the developer locates the problem, isolates the source and then either gets to work fixing it or comes up with a workaround. The debugging process ends with testing and, if necessary, further fixes.

15. Deployment
Deployment is a key step in the web development process. Once a website or an app has been developed and tested, it’s ready to go live; in other words, it’s ready to be deployed. There are several different stages to deploying a website, with the last being hosting it. These days, you can host a website on the internet for free—all you need is an email address!

16. Documentation
A crucial part of software engineering, documentation is essentially the central point of reference for anyone involved in managing, maintaining or using a website or piece of software. Documentation may provide information on requirements, architecture and design, technical properties, information for the end user, or marketing.

17. Domain name
A website’s domain name is essentially its address on the world wide web. It’s the address that users type into the browser in order to view a website—such as “CareerFoundry.com”. Every website can be identified by its IP address (a series of numbers), and the domain name is just a more user-friendly label for these numbers. Domains are split into two levels: in the case of CareerFoundry’s website, the “CareerFoundry” part is the top-level domain, while the “.com” part is the second level domain.

18. Frameworks
Frameworks were invented to make the process of building a website faster and easier. You can think of a framework as a collection of solutions, tools and components that you can access in one central location—rather than seeking them all out separately each time. Some common frameworks include Ruby on Rails, Bootstrap, AngularJS and Joomla.

19. Frontend
Remember how the backend is everything that goes on behind the scenes, and powers what goes on at the frontend? The frontend of a website, also known as client-side, is what the end user sees and interacts with. Frontend languages include HTML, CSS and JavaScript, which all have a hand in determining the visual output of a website.

20. Full-stack
We’ve already covered both the frontend and the backend: now it’s time to throw full-stack development into the mix. Full-stack developers work across all three layers: the frontend, the backend, and the database layer. Because of the sheer depth of their knowledge across the entire tech stack, this kind of developer tends to have years of industry experience and gets paid well for it, as our full-stack salary guide shows.

21. Git
An absolute staple in the web development world, Git is a version control system where developers can store and manage their code. As a web developer, you’ll make constant changes to your code whenever you’re in the process of creating something, be it an app or a website. Git enables you to track these changes and reverse them if necessary, and also to work together with other teams and manage multiple projects at once.

22. GitHub
GitHub is a cloud interface for Git. It has been around since 2008 and now has over 28 million users worldwide, making it the largest host of source code in the world! GitHub offers all the version control functionality of Git, but also offers its own features, such as bug tracking, task management and project wikis. Discover why GitHub is so important for web developers.

23. HTML
HTML stands for Hypertext Markup Language. Simply put, it’s a computer language used to create websites. HTML describes how a document  should be displayed by an internet browser as a webpage. It consists of tags, elements and attributes and, once you’ve got the hang of it, is pretty simple to work with! This beginner’s guide to HTML will tell you more.

24. HTTP
Yet another acronym to get your head around: HTTP stands for Hypertext Transfer Protocol, and is used to transfer data across the internet. HTTP sends the data (say, a HTML document or an image) from an HTTP server program (a web server) to an HTTP client program (a web browser).

25. Information Architecture
Information architecture is the practice of organizing complex information in a clear and logical way. In terms of websites and apps, this means creating a user-friendly structure that makes it easy for the user to find their way around. IA is not just for designers; developers are information architects, too, in the way they structure their code. Generally speaking, site maps, hierarchies, categorizations, navigation and metadata are all part of IA.

Courtesy of : https://careerfoundry.com/en/blog/web-development/50-web-development-buzzwords-that-all-new-programmers-should-learn/
